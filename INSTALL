
===========
Using log4j
===========
	
1) First untar or unzip the distribution file.

2) Assuming you chose to extract the distribution in to the
   PATH_OF_YOUR_CHOICE, untarring the distribution file should create
   a jakarta-log4j-VERSION directory, where VERSION is the log4j
   version number, under PATH_OF_YOUR_CHOICE.

3) Add PATH_OF_YOUR_CHOICE\jakarta-log4j-VERSION\dist\classes to the CLASSPATH
   variable.
   
4) You can now test your installation. To do this issue the command:

   java org.apache.log4j.test.Hello
  
   You should see log statements appearing on the console.

5) Refer to the javadoc documentation and the user manual on how to
   include log statements in your own code.

=========
JAR files
=========

The log4j distribution comes with one jar file: log4j-VERSION.jar
under the PATH_OF_YOUR_CHOICE/jakarta-log4j-VERSION/dist/lib/
directory.

This jar file contains all the class files of the log4j project,
except classes from the org.apache.log4j.examples and
org.apache.log4j.performance packages.

==================   
log4j dependencies
==================
   
The log4j distribution comes with pre-compiled classes. Log4j is based
on JDK 1.1 with the following additional requirements:

    ---------------------
    Package org.log4j.xml 
    ---------------------

    The DOMConfigurator is based on the DOM Level 1 API. The
    DOMConfigurator.configure(Element) method will work with any
    XML parser that will pass it a DOM tree.
    
    The DOMConfigurator.configure(String filename) method and its variants
    require a JAXP compatible XMLparser, for example the Apache Xerces
    parser. Compiling the DOMConfigurator requires the presence of a
    JAXP parser in the classpath.  

    Log4j is shipped with jaxp.jar and parser.jar files under the
    build/lib/ directory.

    ------------
    SMTPAppender
    ------------

    The SMTPAppender relies on the JavaMail API. It has been tested with
    JavaMail API version 1.2. The JavaMail API requires the
    JavaBeans Activation Framework package. You can download the JavaMail API at:

	http://java.sun.com/products/javamail/

    and the JavaBeans Activation Framework at:

	http://java.sun.com/beans/glasgow/jaf.html

    -----------
    JMSAppender
    -----------
  
    The JMSAppender requires the JMS API as well as JNDI. The JMS API
    is usually bundled with the products of the vendors listed under

       http://java.sun.com/products/jms/vendors.html

    -----------------------
    JUnit testing framework
    -----------------------

    Log4j uses the JUnit framework for internal unit testing.  If you
    want to compile all log4j source code, then you will need
    JUnit. JUnit is available from:

          http://www.junit.org

==============
Building log4j
==============
    
Like most java appilicatios today, log4j relies on ANT as its build
tool. ANT is availale from "http://jakarta.apache.org/ant/".  ANT
requires a build file called build.xml which is part of this
distribution.

Log4j is shipped with ant-1.4.jar file under the build/lib/ directory.

In case of problems send an e-mail note to
log4j-user@jakarta.apache.org.  Please do not directly e-mail any of
the log4j developers. The answer to your question might be beneficial
to other users. Closed interaction with developers eliminates the
advantages of having mailing lists where a large number of
knowledgeable people lurk.

